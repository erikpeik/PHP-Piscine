
<- Vector ----------------------------------------------------------------------
The Vector class handles Vectors
an object that has both a magnitude and a direction.

Class Vector represented by the 4 characteristics x, y, z, w witch first 3
is magnitudes and last one is coordinate. 'w' will always be worth 0.0

The Class' constructor is expecting an array that contains:
- 'dest' : the vector's destination vertex, mandatory.
- 'orig' : optional origin vertex (default x=0 y=0 z=0 w=1)

An instance how it's constructed:
$dest = new Vertex ( array( 'x' => 1.0, 'y' => 0.0 'z' => 1.0) )
$vector = new Vector ( array( 'dest' => $dest ) )

If the 'dest' is missing or it doesn't contain an array inside
its undefined behavior. Look at the examples.

The class provides the following methods :

float	magnitude();
Returns the vector's length. (or 'norm').

Vector	normalize();
Returns a normalized version of the vector.
If the vector is already normalized, returns a fresh copy of the vector.

Vector	add( Vector $rhs );
Returns the sum vector of both vectors.

Vector	sub( Vector $rhs );
Returns the difference vector of both vectors.
Vector	opposite();
Returns the opposite vector.

Vector	scalarProduct( $k );
Returns the multiplication of the sector with a scalar.

float	dotProduct( Vector $rhs );
Returns the scalar multiplication of both vectors.

float	cos( Vector $rhs );
returns the angleâ€™sAppendix cosine between both vectors.

Vector	crossProduct( Vector $rhs );
Returns the cross multiplication of both vectors (right-hand mark!)

There are also provided magic __get() methods for reading data:
getX(), getY(), getZ(), getW(), getColor()

And magic __set() methods for writing data to inaccessible properties:
setX($value), setY($value), setZ($value), setW($value), setColor($value)
---------------------------------------------------------------------- Vector ->
